[common]

# 是否默认选择对应操作，操作序号请看运行开始打印信息。
# 开始时如需选择操作，请输入-1
choice_num = -1

# 开始具体任务前是否需要确认相关配置
start_confirm = yes

[db]
# 连接藏品数据数据库配置
# mysql_host=>DB服务器
# mysql_database=>数据库名称
# mysql_port=>数据库连接端口
# mysql_user=>数据库登陆用户
# mysql_password=>数据库登陆密码
mysql_host = localhost
mysql_database = cms
mysql_port = 1698
mysql_user = u_cms
mysql_password = heloo323.


[coll]
# 藏品系统的，服务端接口请求HOST地址【结尾别+斜杠】
api_base_url = http://127.0.0.1
# 藏品系统的登陆账户设置，必须是博物馆用户
sys_login_user_name = ts
sys_login_user_password = tsb3@323

[scan_res]
# 要扫描入库的资源类型
# IMAGE 图片、ARCHAEOLOGY 考古线、PEST_ANALYSE 病虫害。多个请用一个空格分割。
# 更多扫描类型，和对应类型的扫描配置，请看同目录 config.py 文件。
# MP3=MP3=>mp3;
# IMAGE=图片=>jpg,jpeg,bmp,png;
# SIDE_SIX_IMAGE=六视图=>jpg,jpeg,bmp,png;
# VIDEO=视频=>mp4;
# ORIGIN_CERT=原始凭证=>jpg,jpeg,bmp,png;
# PEST_ANALYSE=病虫害=>jpg,jpeg,bmp,png;
# ARCHAEOLOGY=考古线图=>jpg,jpeg,bmp,png;
# POSITIVE_PHOTOGRAPHY=正摄影像=>jpg,jpeg,bmp,png;
# DOCUMENT=文档=>doc,docx,xls,xlsx,ppt,pptx,pdf,txt,pdf;
# ZIP=压缩文件=>zip;
# SOURCE=源数据=>ai,dwg,cr2,tiff,tif,psd,stl,ace,wrp;
# INGREDIENT_ANALYSIS=成份分析","jpg,jpeg,bmp,png,doc,docx,xls,xlsx,ppt,pptx,pdf,txt,pdf;
# STRUCTURE_ANALYSIS=结构分析","jpg,jpeg,bmp,png,doc,docx,xls,xlsx,ppt,pptx,pdf,txt,pdf;
# ATTACHMENT=附件=>jpg,jpeg,bmp,png,ai,dwg,cr2,tiff,tif,psd,stl,ace,wrp,doc,docx,xls,xlsx,ppt,pptx,pdf,txt,pdf,mp4,mp3,zip;
# THREE_MODEL=模型=>zip;
go_scan_type_list = IMAGE SOURCE THREE_MODEL

# 获取匹配操作文件夹的正则表达式
# ^(?P<prj>[\da-zA-Z]+)[\_\-](?P<num>[\da-zA-Z]+)[\_\-](?P<name>.+)$ 匹配的文件夹如："1903_0012_20082_00 铜罗汉" "0001_NKⅢ：551_00" prj 为项目编号 num 为编号 name为文件夹内容主名称
match_dir_pattern = ^(?P<num>[\da-zA-Z]+)[\_\-](?P<name>[^\n]+)$

# 根据匹配的文件夹规则获取的num值去匹配藏品信息记录时，所比对的列名
# 目前有：c_register_num、c_cate_num、c_old_num 对应 总登记号、分类号、旧号
select_coll_info_where_field_name = c_old_num

# 是否自动创建藏品信息
# 如开启，当匹配的文件夹未发现对应的藏品信息时，则创建藏品信息
auto_create_coll_info = false

# 识别件组文物文件夹（即一级文物文件夹包含文物件文件夹）
# 识别子文件夹名称的正则匹配，主要识别件序号
# match_sub_dir_pattern = ^(?P<prj>[\da-zA-Z]+)[\_\-](?P<num>[\da-zA-Z]+)[\_\-](?P<name>[^-_]+)[\_\-](?<subnum>[\d]+)$

# 操作的内容文件夹根级目录【结尾别+斜杠】
# 扫描支持二级目录，如组件文物下包含多个子组件文物
# unix的路径格式：/mnt/dirname
# windows的路径格式： c:\dirname
# 支持多路径，多个请用一个空格隔开
root_path = /Users/potato/Downloads/文物文件夹

# 基于root_path 向下扫描的深度， 默认为1 不继续向下扫描。
depth = 1

# 判断规则如果文物同一类型的本地资源数量<=数据库的数量，则忽略改文物该类型的资源上传
check_rule_cate_same_res_count_ignore = yes

# 检查3D文件夹的正则规则 如不检查清留空
check_rule_check_3d_dir_name_pattern = low

# 是否自动设置藏品信息封面，如true将在扫描的适合自动设置
set_collection_cover = true
# 设置藏品封面时，所选取的图索引，值>0。 1为第一张，依次累推。请勿设置过大值。
set_collection_cover_res_idx = 1
# 设置藏品封面，所选用的图片格式
set_collection_cover_res_format = jpg


[scan_one_folder_res]
# 扫描同一个文件夹的所有匹配的资源文件，并根据规则入库到对应的资源库
# 请配合 config.json 的 get_res_num_rules 配置

# 要扫描资源入库对应的资源类型，只能设置一个
# MP3=MP3=>mp3;
# IMAGE=图片=>jpg,jpeg,bmp,png;
# SIDE_SIX_IMAGE=六视图=>jpg,jpeg,bmp,png;
# VIDEO=视频=>mp4;
# ORIGIN_CERT=原始凭证=>jpg,jpeg,bmp,png;
# PEST_ANALYSE=病虫害=>jpg,jpeg,bmp,png;
# ARCHAEOLOGY=考古线图=>jpg,jpeg,bmp,png;
# POSITIVE_PHOTOGRAPHY=正摄影像=>jpg,jpeg,bmp,png;
# DOCUMENT=文档=>doc,docx,xls,xlsx,ppt,pptx,pdf,txt,pdf;
# ZIP=压缩文件=>zip;
# SOURCE=源数据=>ai,dwg,cr2,tiff,tif,psd,stl,ace,wrp;
# INGREDIENT_ANALYSIS=成份分析","jpg,jpeg,bmp,png,doc,docx,xls,xlsx,ppt,pptx,pdf,txt,pdf;
# STRUCTURE_ANALYSIS=结构分析","jpg,jpeg,bmp,png,doc,docx,xls,xlsx,ppt,pptx,pdf,txt,pdf;
# ATTACHMENT=附件=>jpg,jpeg,bmp,png,ai,dwg,cr2,tiff,tif,psd,stl,ace,wrp,doc,docx,xls,xlsx,ppt,pptx,pdf,txt,pdf,mp4,mp3,zip;
# THREE_MODEL=模型=>zip;
scan_to_res_cate = IMAGE

# 要操作的文件夹路径【结尾别+斜杠】
# unix的路径格式：/mnt/dirname
# windows的路径格式： c:\dirname
folder_path = /Users/potato/Desktop/TMP/ttt

# cache文件夹
cache_path = /Volumes/cachepath


[scan_res_common]
# 扫描资源公共配置

# 资源入库方式：db、api 对应 直接 插入数据库、API上传录入
# db方式适合脚本、程序安装在同一目录
# api方式适合脚本、程序不在同一服务器
resource_storage_way = db
# 当 resource_storage_way=>DB时有效
# 资源URL前缀，用于插入数据库资源表URL的前缀【结尾别+斜杠】
resource_url_prefix = /data/attachment
# 当 resource_storage_way=>DB时有效
# 成功入库的资源复制到目标文件夹【结尾别+斜杠】
# 如果留空，则不复制相关资源，需要手动将相应目录复制到相应部署文件夹
# unix的路径格式：/mnt/dirname
# windows的路径格式： c:\dirname
copy_target_path = /mnt/app/kl-cms/static
# 当 resource_storage_way=>DB时有效
# 当copy_target_path设置时，此值生效
# 复制到目标文件夹时是否重命名文件,重命名存储路径将按日期+md5命名。
# 如为false 那将按源目录结构和文件名复制
copy_target_path_rename = true
# 复制到路径的资源文件是否进行压缩处理，只在复制源文件到路径时使用（一般为图片文件）
copy_target_path_to_compress = false
# 压缩尺寸百分比1到100
copy_target_path_to_compress_scale_precent = 30
# 压缩尺寸质量1到100，85为最佳
copy_target_path_to_compress_quality = 85



[scan_folder_res_copy_to]
# 扫描根目录所有文件夹并复制指定格式文件到输出目录
# 要处理的根目录文件夹
folder_path = /Users/potato/Downloads/文物文件夹2
# 复制资源输出的文件夹
output_path = /Users/potato/Downloads/文物文件夹2
# 匹配文件夹正则规则
folder_match_pattern = ^(?P<num>[\da-zA-Z]+)[\_\-](?P<name>.+)$
# 要搜索的资源文件格式
search_ext_list = jpg,png



[messenger]
# 使用了及时达的推送服务
# 如果想开启消息推送，则将 enable 设置为 true，默认为 false 不开启推送
# 开启消息推送必须填入 jsdkey，如何获取请参考  http://push.ijingniu.cn/。
# 任务执行完成即推送消息
enable = true

# 多个key请用空格隔开
jsdkey = 6fd594d5f4a45378
